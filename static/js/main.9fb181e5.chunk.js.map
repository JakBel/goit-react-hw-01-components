{"version":3,"sources":["components/task1_profile/Profile.module.css","components/task3_friend-list/Friend.module.css","components/task2_statistics/Statistics.module.css","components/task4_transaction-history/Transaction.module.css","components/task1_profile/Profile.jsx","components/task2_statistics/Statistics.jsx","components/task3_friend-list/FriendListItem.jsx","components/task3_friend-list/FriendList.jsx","components/task4_transaction-history/TransactionHistory.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","profileClass","src","alt","avatarClass","nameClass","tagClass","locationClass","statsClass","labelClass","labelClass__span","quantityClass","followers","views","likes","Statistics","header","title","undefined","titleClass","style","isHidden","statisticsClass","statListClass","map","id","percentage","label","key","itemClass","backgroundColor","Math","random","toString","percentageClass","FriendListItem","name","isOnline","status","statusOnline","statusOffline","width","FriendList","friends","friendListClass","TransactionHistory","items","transactionHistoryClass","type","amount","currency","App","user","href","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fb181e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileClass\":\"Profile_profileClass__2KPhn\",\"avatarClass\":\"Profile_avatarClass__278WJ\",\"nameClass\":\"Profile_nameClass__9BEsf\",\"tagClass\":\"Profile_tagClass__30pb6\",\"locationClass\":\"Profile_locationClass__39rao\",\"statsClass\":\"Profile_statsClass__3QFf1\",\"labelClass__span\":\"Profile_labelClass__span__1raXa\",\"labelClass\":\"Profile_labelClass__3jrGg\",\"quantityClass\":\"Profile_quantityClass__jq5HF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemClass\":\"Friend_itemClass__1Ty9U\",\"avatarClass\":\"Friend_avatarClass__31uZk\",\"nameClass\":\"Friend_nameClass__1MD9x\",\"statusOnline\":\"Friend_statusOnline__33ybD\",\"statusOffline\":\"Friend_statusOffline__1hwi7\",\"friendListClass\":\"Friend_friendListClass__2J3RH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsClass\":\"Statistics_statisticsClass__Zvt4X\",\"titleClass\":\"Statistics_titleClass__1TIy1\",\"statListClass\":\"Statistics_statListClass__X7FXZ\",\"itemClass\":\"Statistics_itemClass__1XFAB\",\"percentageClass\":\"Statistics_percentageClass__2gkWm\",\"isHidden\":\"Statistics_isHidden__35S5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistoryClass\":\"Transaction_transactionHistoryClass__2teqf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  profileClass,\n  nameClass,\n  avatarClass,\n  tagClass,\n  locationClass,\n  statsClass,\n  labelClass,\n  labelClass__span,\n  quantityClass,\n} from \"./Profile.module.css\";\n\nconst Profile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <div className={profileClass}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"User avatar\" className={avatarClass} />\n        <p className={nameClass}>{username}</p>\n        <p className={tagClass}>{tag}</p>\n        <p className={locationClass}>{location}</p>\n      </div>\n\n      <ul className={statsClass}>\n        <li className={labelClass}>\n          <span className={labelClass__span}>Followers</span>\n          <span className={quantityClass}>{stats.followers}</span>\n        </li>\n        <li className={labelClass}>\n          <span className={labelClass__span}>Views</span>\n          <span className={quantityClass}>{stats.views}</span>\n        </li>\n        <li className={labelClass}>\n          <span className={labelClass__span}>Likes</span>\n          <span className={quantityClass}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Profile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  statisticsClass,\n  titleClass,\n  statListClass,\n  itemClass,\n  percentageClass,\n  isHidden,\n} from \"./Statistics.module.css\";\n\nconst Statistics = ({ title, stats }) => {\n  let header;\n  if (title === undefined) {\n    header = (\n      <h2 className={titleClass} style={{ isHidden }}>\n        {title}\n      </h2>\n    );\n  } else {\n    header = <h2 className={titleClass}>{title}</h2>;\n  }\n  const randomHexColor = () =>\n    \"#\" + (((1 << 24) * Math.random()) | 0).toString(16);\n  return (\n    <div>\n      <section className={statisticsClass}>\n        {header}\n\n        <ul className={statListClass}>\n          {stats.map(({ id, percentage, label }) => (\n            <li\n              key={id}\n              className={itemClass}\n              style={{ backgroundColor: `${randomHexColor()}` }}\n            >\n              <span className=\"label\">{label}</span>\n              <span className={percentageClass}>{percentage}%</span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  itemClass,\n  avatarClass,\n  nameClass,\n  statusOffline,\n  statusOnline,\n} from \"./Friend.module.css\";\n\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\n  let status = isOnline ? statusOnline : statusOffline;\n  return (\n    <li key={id} className={itemClass}>\n      <span className={status}></span>\n      <br></br>\n      <img className={avatarClass} src={avatar} alt=\"User avatar\" width=\"48\" />\n      <p className={nameClass}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FriendListItem from \"./FriendListItem\";\nimport { friendListClass } from \"./Friend.module.css\";\n\nconst FriendList = ({ friends }) => {\n  return (\n    <div>\n          <ul className={friendListClass}>\n\n          {friends.map(({ avatar, name, isOnline, id }) => (\n              <FriendListItem\n                  key={id}\n                  avatar={avatar}\n                  name={name}\n                  isOnline={isOnline}               \n              />\n          ))}\n          </ul>\n    </div>\n  );\n};\n\nFriendList.propTypes = {\n    friends: PropTypes.array,\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { transactionHistoryClass } from \"./Transaction.module.css\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div>\n      <table className={transactionHistoryClass}>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(({ id, type, amount, currency }) => (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport React from 'react';\n//Task 1\nimport Profile from \"./components/task1_profile/Profile\";\nimport user from './components/task1_profile/user.json';\n//Task 2\nimport Statistics from './components/task2_statistics/Statistics';\nimport data from './components/task2_statistics/data.json';\n//Task 3\nimport FriendList from './components/task3_friend-list/FriendList';\nimport friends from './components/task3_friend-list/friends.json';\n//Task 4\nimport TransactionHistory from './components/task4_transaction-history/TransactionHistory';\nimport transactions from './components/task4_transaction-history/transactions.json';\n\nconst App = () => {\n  const { username, tag, location, avatar, stats } = user;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <h1>Task 1 - social media profile</h1>\n          <a href=\"https://github.com/JakBel/goit-react-hw-01-components\">\n            Link do GitHub\n          </a>\n        </div>\n        <Profile\n          username={username}\n          tag={tag}\n          location={location}\n          avatar={avatar}\n          stats={stats}\n        />\n        <div>\n          <h1>Task 2 - statistics section</h1>\n          <a href=\"https://github.com/JakBel/goit-react-hw-01-components\">\n            Link do GitHub\n          </a>\n        </div>\n        <Statistics title=\"Upload stats\" stats={data} />\n        <Statistics stats={data} />\n        <div>\n          <h1>Task 3 - friends list</h1>\n          <a href=\"https://github.com/JakBel/goit-react-hw-01-components\">\n            Link do GitHub\n          </a>\n        </div>\n        <FriendList friends={friends} />\n        <div>\n          <h1>Task 4 - transaction history</h1>\n          <a href=\"https://github.com/JakBel/goit-react-hw-01-components\">\n            Link do GitHub\n          </a>\n        </div>\n        <TransactionHistory items={transactions} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}